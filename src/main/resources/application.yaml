server:
  port: 8080

spring:
  application:
    name: Demo spring-boot keycloak etc
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: https://keycloak-dev-ro-tc.carrefour.ro/auth/realms/ucare
            authorization-uri: https://keycloak-dev-ro-tc.carrefour.ro/auth/realms/ucare/protocol/openid-connect/auth
            token-uri: https://keycloak-dev-ro-tc.carrefour.ro/auth/realms/ucare/protocol/openid-connect/token
            user-info-uri: https://keycloak-dev-ro-tc.carrefour.ro/auth/realms/ucare/protocol/openid-connect/userinfo
            jwk-set-uri: https://keycloak-dev-ro-tc.carrefour.ro/auth/realms/ucare/protocol/openid-connect/certs
        registration:
          keycloak:
            provider: keycloak
            client-name: keycloak
            client-id: ${CLIENT_ID_CARREFOUR_KEYCLOAK}
            client-secret: ${CLIENT_SECRET_CARREFOUR_KEYCLOAK}
            scope:
              - openid
              - offline_access
              - profile
              - email
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/keycloak

app:
  config:
    name: Nume Aplicatie
    email: email@localhost.tld
    retry_number: 10
    logout: https://keycloak-dev-ro-tc.carrefour.ro/auth/realms/ucare/protocol/openid-connect/logout
    keycloak_token_endpoint: https://keycloak-dev-ro-tc.carrefour.ro/auth/realms/ucare/protocol/openid-connect/token
    keycloak_client_id: ${CLIENT_ID_CARREFOUR_KEYCLOAK}
    keycloak_client_secret: ${CLIENT_SECRET_CARREFOUR_KEYCLOAK}

logging:
  level:
    org:
      springframework:
        security: INFO
  pattern:
    console: logger %d{dd-MM-yyyy HH:mm:ss} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n
